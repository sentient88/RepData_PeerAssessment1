getwd()
getwd()
q()
?solve
m <- matrix(1:4, nrow = 2, ncol = 2)
m
solve(m)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(1:100)
makeVector(1:100)
makeVector(1:100)
ans1 <- makeVector(1:100)
ans1
makeVector(c(2, 3, 8))
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",key="2a51ffd8d059463cf401",secret = "34cdb854ccf5a4d728583f4c978028223a7d6c83")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
?read.csv
mydf <- read.csv(path2csv, stringAsFactors = False)
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
reset()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
?gather
submit()
submit()
submit()
reset()
submit()
?spread
submit()
submit()
extract_numeric("class5")
?mutate
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?rbind_list
rbind_list(passed, failed)
sat
submit()
submit()
?select
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
Type help(package = lubridate)
help(package = lubridate)
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
install.packages("knitr")
?highlight
setwd("~/Coursera_work")
my_data <- read.csv("activity.csv", header = TRUE, na.strings = "NA")
names(my_data) <- c("Steps", "Date", "Interval")
library(dplyr)
by_date <- group_by(my_data, Date)
my_agg <- summarize(by_date, sum(Steps, na.rm = TRUE))
names(my_agg) <- c("Date", "Total_Steps")
mean(my_agg$Total_Steps)
median(my_agg$Total_Steps)
by_interval <- group_by(my_data, Interval)
my_avg <- summarize(by_interval, mean(Steps, na.rm = TRUE))
names(my_avg) <- c("Interval", "Avg_Steps")
my_interval <- c(0:287)
my_df <- cbind(my_avg, my_interval)
names(my_df) <- c("Interval", "Avg_Steps", "My_Interval")
y <- max(my_avg$Avg_Steps)
my_avg[my_avg$Avg_Steps == y, ]
sum(is.na(my_data$Steps))
NA_data <- filter(my_data, is.na(Steps))
mergedData <- merge(NA_data, my_avg, by.x = "Interval", by.y = "Interval")
imputeData <- mergedData %>%
mutate(Steps = Avg_Steps) %>%
select(Steps, Date, Interval)
nonNA_data <- filter(my_data, !is.na(Steps))
new_data <- rbind(imputeData, nonNA_data)
by_date2 <- group_by(new_data, Date)
my_agg2 <- summarize(by_date2, sum(Steps))
names(my_agg2) <- c("Date", "Total_Steps")
mean(my_agg2$Total_Steps)
median(my_agg2$Total_Steps)
my_aggtest <- summarize(by_date, sum(Steps, na.rm = FALSE))
View(my_agg)
View(my_aggtest)
hist(my_aggtest$steps, col = "light blue", main = "Histogram", xlab = "Total no. of steps taken each day")
nonNA_data <- filter(my_data, !is.na(Steps))
View(nonNA_data)
by_date <- group_by(nonNA_data, Date)
my_agg <- summarize(by_date, sum(Steps))
names(my_agg) <- c("Date", "Total_Steps")
hist(my_agg$Total_Steps, col = "light blue", main = "Histogram", xlab = "Total no. of steps taken each day")
mean(my_agg$Total_Steps)
median(my_agg$Total_Steps)
by_interval <- group_by(nonNA_data, Interval)
my_avg <- summarize(by_interval, mean(Steps))
names(my_avg) <- c("Interval", "Avg_Steps")
my_interval <- c(0:287)
my_df <- cbind(my_avg, my_interval)
names(my_df) <- c("Interval", "Avg_Steps", "My_Interval")
with(my_df, plot(My_Interval, Avg_Steps, type = "l", xaxt = "n", col = "brown", main = "Time series plot", xlab = "5-minute Interval", ylab = "Average no. of steps taken, across all days"))
my_xlab <- c("00:00", "04:00", "08:00", "12:00", "16:00", "20:00")
axis(1, at=c(0, 48, 96, 144, 192, 240), labels = my_xlab)
y <- max(my_avg$Avg_Steps)
my_avg[my_avg$Avg_Steps == y, ]
sum(is.na(my_data$Steps))
NA_data <- filter(my_data, is.na(Steps))
mergedData <- merge(NA_data, my_avg, by.x = "Interval", by.y = "Interval")
imputeData <- mergedData %>%
mutate(Steps = Avg_Steps) %>%
select(Steps, Date, Interval)
new_data <- rbind(imputeData, nonNA_data)
View(new_data)
Summary(new_daya)
Summary(new_data)
summary(new_data)
summary(my_data)
by_date2 <- group_by(new_data, Date)
my_agg2 <- summarize(by_date2, sum(Steps))
names(my_agg2) <- c("Date", "Total_Steps")
hist(my_agg2$Total_Steps, col = "light green", main = "Histogram", xlab = "Total no. of steps taken each day")
mean(my_agg2$Total_Steps)
median(my_agg2$Total_Steps)
median(my_agg$Total_Steps)
mean(my_agg$Total_Steps)
hist(my_agg2$Total_Steps, col = "light green", main = "Histogram (missing values imputed", xlab = "Total no. of steps taken each day")
hist(my_agg2$Total_Steps, col = "light green", main = "Histogram (missing values imputed)", xlab = "Total no. of steps taken each day")
y <- mutate(new_data, Dayofweek = weekdays(Date))
y <- mutate(new_data, Dayofweek = weekdays(as.Date(Date)))
head(y)
new_data <- arrange(new_data, Date, Interval)
View(new_data)
y <- mutate(new_data, Dayofweek = weekdays(as.Date(Date)))
View(y)
z <- ifelse((new_data$Dayofweek == "Saturday")|(new_data$Dayofweek == "Sunday"), "weekend", "weekday")
y2 <- mutate(new_data, Dayfactor = z)
y2 <- mutate(y, Dayfactor = z)
y2 <- mutate(y, Dayfactor = ifelse((new_data$Dayofweek == "Saturday")|(new_data$Dayofweek == "Sunday"), "weekend", "weekday")))
y2 <- mutate(y, Dayfactor = ifelse((new_data$Dayofweek == "Saturday")|(new_data$Dayofweek == "Sunday"), "weekend", "weekday"))
y2 <- mutate(y, Dayfactor = ifelse((Dayofweek == "Saturday")|(Dayofweek == "Sunday"), "weekend", "weekday"))
View(y2)
?write.table
write.csv(y2, file = "test.csv")
new_data <- mutate(new_data, Dayofweek = weekdays(as.Date(Date)))
new_data <- mutate(new_data, Dayfactor = ifelse((Dayofweek == "Saturday")|(Dayofweek == "Sunday"), "weekend", "weekday"))
View(new_data)
by_day_interval <- group_by(new_data, Dayofweek, Interval)
new_avg <- summarize(by_day_interval, mean(Steps))
View(new_avg)
by_day_interval <- group_by(new_data, Dayfactor, Interval)
new_avg <- summarize(by_day_interval, mean(Steps))
View(new_avg)
summary(my_data)
summary(new_data)
names(new_avg) <- c("Day_Type", "Interval", "Avg_Steps")
xyplot(Avg_Steps ~ Interval | Day_Type, layout = c(1, 2))
library(lattice)
xyplot(Avg_Steps ~ Interval | Day_Type, layout = c(1, 2))
?xyplot
xyplot(Avg_Steps ~ Interval | Day_Type, data = new_avg, layout = c(1, 2))
?xyplot
xyplot(Avg_Steps ~ Interval | Day_Type, data = new_avg, layout = c(1, 2), type = "l", main = "Time series plot", xlab = "Interval", ylab = "Number of steps")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
str(new_data)
setwd("~/Coursera_work/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
